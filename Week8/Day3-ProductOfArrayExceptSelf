//Problem: https://leetcode.com/problems/product-of-array-except-self/


/*

Time Complexity: O(n)


Space Complexity: O(n)


General Explanation:  We have one array store the product of all numbers to the left of given index, and one store all products to the right. 
                      We can then multiply the product to the left and the product to the right together to come up with the product of all  
                      values not including the current indext itself



*/



class Solution {
    public int[] productExceptSelf(int[] nums) {
        int length = nums.length;
        int leftProd[] = new int[length];
        int rightProd[] = new int[length];
        
        leftProd[0] = 1;
        for(int i=1;i<length;i++)
            leftProd[i]=leftProd[i-1]*nums[i-1];
        
        rightProd[length-1]=1;
        for(int i=length-1;i>=1;i--)
            rightProd[i-1] = rightProd[i]*nums[i];
        
        for(int i=0;i<length;i++)
            nums[i] = leftProd[i]*rightProd[i];
        
        return nums;
    }
}
