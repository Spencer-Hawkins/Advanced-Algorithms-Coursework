//Problem:  https://leetcode.com/problems/bulb-switcher/


/*

Time Complexity: O(1)

Space Complexity: O(1)

General Explanation:  Because a bulb needs to be toggled an even number of times, the amount of perfect squares under n is the amount of bulbs that will be 
                      flipped on.


*/


class Solution {
    public int bulbSwitch(int n) {
        
        int sqrt = (int) Math.sqrt(n);
        
        return sqrt;
    }
}



//Code Referenced:  https://leetcode.com/problems/bulb-switcher/discuss/2401364/Java-or-Explained-or-O(1)-runtime
//                  https://leetcode.com/problems/bulb-switcher/discuss/77144/One-line-java-with-explanation
//                  https://leetcode.com/problems/bulb-switcher/discuss/1161362/Java-Code-with-Explanation
