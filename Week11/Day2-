//Problem: https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string

/*
Runtime: O(n)

Space Complexity: O(n)


General Explanation: If next character matcher top of the stack, we remove top of the stack and skip adding current letter, else we add the letter to our stack
                     Once we finish building stack, we add each Character to a string builder and then return the string



*/






class Solution {
    public String removeDuplicates(String s) {
        
        Stack<Character> stk = new Stack<Character>();
        for(int i=s.length()-1; i>=0; i--) {
            if(!stk.empty()){
                if(stk.peek() != s.charAt(i)) stk.push(s.charAt(i));
                else stk.pop();
            }
            else stk.push(s.charAt(i));
        }
        StringBuilder str = new StringBuilder();
        while(!stk.empty()) str.append(stk.pop());
        return str.toString();

        
    }
}


}
}
